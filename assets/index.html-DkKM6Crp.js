import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as r,o as n}from"./app-K9aAqEZ1.js";const i={};function s(l,t){return n(),e("div",null,t[0]||(t[0]=[r('<h1 id="网关系统概述" tabindex="-1"><a class="header-anchor" href="#网关系统概述"><span>网关系统概述</span></a></h1><p>本系统是一个基于Netty和Springboot <strong>责任链模式</strong> 和 <strong>分布式服务治理</strong>的微服务网关，核心功能包括 <strong>负载均衡、请求鉴权、自定义请求处理、接口调用处理、结果包装、服务注册与发现、动态配置更新</strong> 等。系统通过 <strong>Redis</strong> 实现接口信息缓存、心跳状态同步，结合 <strong>JWT鉴权</strong> 与 <strong>安全组标识</strong> 完成权限校验，支持 <strong>HTTP/Dubbo</strong> 双协议封装与泛化调用。</p><p>在<code>GitHub</code>上查看<a href="https://github.com/1973034392/api-gateway-codelong" target="_blank" rel="noopener noreferrer">项目地址</a></p><hr><h2 id="网关核心模块" tabindex="-1"><a class="header-anchor" href="#网关核心模块"><span>网关核心模块</span></a></h2><ul><li><strong>功能</strong>：作为请求处理的核心入口，负责请求的完整生命周期管理。</li><li><strong>子模块</strong>： <ul><li><strong>请求处理器</strong>：解析请求参数、路径、方法，并执行鉴权、限流、路由等逻辑。</li><li><strong>鉴权模块</strong>：通过 JWT 鉴权验证请求合法性，结合安全组秘钥进行权限校验。</li><li><strong>限流与负载均衡</strong>：基于 NGINX的分布式限流（令牌桶算法），并根据NGINX负载均衡 + 自定义负载均衡策略（权重）分配请求到后端服务。</li><li><strong>动态代理与 RPC 调用</strong>：创建动态代理对象，封装 HTTP/Dubbo 请求，对连接源进行包装存储，支持泛化调用（泛型参数传递）。</li><li><strong>结果封装</strong>：统一处理服务返回结果，包装为 JSON/XML 格式，处理异常并返回标准状态码。</li><li><strong>自定义处理器</strong>：通过责任链处理自定义处理器（如鉴权处理器、日志处理器、限流处理器）按顺序进行自定义请求处理。</li></ul></li></ul><h2 id="网关中心模块" tabindex="-1"><a class="header-anchor" href="#网关中心模块"><span>网关中心模块</span></a></h2><ul><li><strong>功能</strong>：管理全局配置、服务注册与发现、接口信息同步。</li><li><strong>子模块</strong>： <ul><li><strong>配置管理</strong>：动态加载并刷新 Redis/Nginx 配置，支持负载均衡策略更新。</li><li><strong>服务注册与发现</strong>： <ul><li>服务提供者通过 SDK 注册服务信息（URL、接口名、方法名、参数类型）。</li><li>Redis 存储服务元数据（如 <code>heart:beat:server:group:服务名</code>，包含地址、上次心跳时间）。</li><li>定时同步数据库信息到 Redis，确保服务列表实时性。</li></ul></li><li><strong>心跳与续约</strong>： <ul><li>服务启动时主动注册，后续定期发送心跳续约（间隔 15 秒，过期时间 30 秒）。</li><li>Redis Key 过期自动触发服务下线，避免僵尸节点。</li></ul></li><li><strong>接口拉取与同步</strong>：定时从数据库拉取接口信息，更新到 Redis 和 Nginx 配置。</li></ul></li></ul><h2 id="sdk-模块" tabindex="-1"><a class="header-anchor" href="#sdk-模块"><span>SDK 模块</span></a></h2><ul><li><strong>功能</strong>：提供服务提供者使用的 SDK，简化服务注册与调用。</li><li><strong>子模块</strong>： <ul><li><strong>服务注册 SDK</strong>：自动加载配置，扫描自定义注解并上传接口信息，封装 HTTP/RPC 请求，创建数据源并注册服务。</li><li><strong>请求调用SDK</strong>: 更便捷地进行请求调用，支持失败重试。</li></ul></li></ul><h2 id="redis-消息订阅与事件通知" tabindex="-1"><a class="header-anchor" href="#redis-消息订阅与事件通知"><span>Redis 消息订阅与事件通知</span></a></h2><ul><li><strong>功能</strong>：实现分布式事件驱动，确保网关与服务提供者的实时通信。</li><li><strong>子模块</strong>： <ul><li><strong>消息订阅</strong>：监听 Redis 通道，接收服务上下线、配置变更等事件。</li><li><strong>事件处理</strong>： <ul><li>服务下线事件：自动删除 Redis 中的服务记录，更新负载均衡池。</li><li>配置变更事件：触发 Nginx 配置刷新，动态调整路由规则和负载均衡策略。</li></ul></li><li><strong>分布式锁与 ID 生成</strong>：基于 Redis 实现分布式锁，生成全局唯一 ID（Snowflake 算法）。</li></ul></li></ul><h2 id="数据库与持久化" tabindex="-1"><a class="header-anchor" href="#数据库与持久化"><span>数据库与持久化</span></a></h2><ul><li><strong>功能</strong>：存储网关核心数据，支持高可用与快速查询。</li><li><strong>子模块</strong>： <ul><li><strong>接口信息</strong>：存储接口的 URL、方法、参数、安全组等元数据。</li><li><strong>服务注册</strong>：记录服务提供者的地址、心跳时间、接口映射关系。</li><li><strong>配置管理</strong>：存储网关全局配置（如NGINX地址、负载均衡权重等等）。</li></ul></li></ul>',14)]))}const p=o(i,[["render",s]]),d=JSON.parse('{"path":"/projects/gateway/","title":"网关系统概述","lang":"zh-CN","frontmatter":{"description":"网关系统概述 本系统是一个基于Netty和Springboot 责任链模式 和 分布式服务治理的微服务网关，核心功能包括 负载均衡、请求鉴权、自定义请求处理、接口调用处理、结果包装、服务注册与发现、动态配置更新 等。系统通过 Redis 实现接口信息缓存、心跳状态同步，结合 JWT鉴权 与 安全组标识 完成权限校验，支持 HTTP/Dubbo 双协议封...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网关系统概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-29T15:05:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CodeLong\\",\\"url\\":\\"codelong.top\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/projects/gateway/"}],["meta",{"property":"og:site_name","content":"CodeLong"}],["meta",{"property":"og:title","content":"网关系统概述"}],["meta",{"property":"og:description","content":"网关系统概述 本系统是一个基于Netty和Springboot 责任链模式 和 分布式服务治理的微服务网关，核心功能包括 负载均衡、请求鉴权、自定义请求处理、接口调用处理、结果包装、服务注册与发现、动态配置更新 等。系统通过 Redis 实现接口信息缓存、心跳状态同步，结合 JWT鉴权 与 安全组标识 完成权限校验，支持 HTTP/Dubbo 双协议封..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-29T15:05:32.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-29T15:05:32.000Z"}]]},"git":{"createdTime":1747712503000,"updatedTime":1751209532000,"contributors":[{"name":"1973034392","username":"1973034392","email":"1973034392@qq.com","commits":4,"url":"https://github.com/1973034392"}]},"readingTime":{"minutes":3.16,"words":949},"filePathRelative":"projects/gateway/README.md","autoDesc":true}');export{p as comp,d as data};
