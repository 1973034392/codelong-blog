import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as t}from"./app-CKloTrIz.js";const n={};function d(r,e){return t(),a("div",null,e[0]||(e[0]=[i(`<h1 id="redis-bitmap-与流量统计" tabindex="-1"><a class="header-anchor" href="#redis-bitmap-与流量统计"><span>Redis BitMap 与流量统计</span></a></h1><p>Redis 的 <strong>BitMap (位图)</strong> 并不是一个独立的数据类型，而是对 String 类型的一种扩展和一系列位操作命令的集合。它允许您将一个字符串看作是一个由二进制位（0 或 1）组成的数组，并对这些位进行独立的设置和查询。</p><p>由于其极高的空间效率，BitMap 在处理海量数据的布尔状态（例如，用户是否在线、是否签到、是否看过某篇文章）时，表现得非常出色。</p><h2 id="核心原理与命令" tabindex="-1"><a class="header-anchor" href="#核心原理与命令"><span>核心原理与命令</span></a></h2><ul><li><strong>数据结构</strong>：BitMap 本质上是一个字节数组（String），Redis 提供了直接操作其二进制位的接口。</li><li><strong><code>SETBIT key offset value</code></strong>：设置 <code>key</code> 对应 BitMap 中 <code>offset</code> (偏移量) 位置上的位为 <code>value</code> (0 或 1)。这是最核心的写入操作。</li><li><strong><code>GETBIT key offset</code></strong>：获取 <code>key</code> 对应 BitMap 中 <code>offset</code> 位置上的位的值。</li><li><strong><code>BITCOUNT key [start end]</code></strong>：统计 BitMap 中值为 1 的位的数量。可以指定字节范围进行统计。</li><li><strong><code>BITOP operation destkey key [key ...]</code></strong>：对一个或多个 BitMap 执行位运算（AND, OR, XOR, NOT），并将结果保存到 <code>destkey</code>。</li></ul><h2 id="如何使用-bitmap-进行流量统计" tabindex="-1"><a class="header-anchor" href="#如何使用-bitmap-进行流量统计"><span>如何使用 BitMap 进行流量统计？</span></a></h2><p>这是 BitMap 最经典的用途，尤其是需要对用户进行去重统计的场景。</p><h3 id="_1-统计日活跃用户-dau" tabindex="-1"><a class="header-anchor" href="#_1-统计日活跃用户-dau"><span>1. 统计日活跃用户 (DAU)</span></a></h3><p>假设我们的系统有数亿用户，并且每个用户都有一个从 0 开始自增的数字 ID。</p><ul><li><p><strong>记录用户登录</strong>：当一个 ID 为 <code>userId</code> 的用户在某一天（例如 <code>2025-08-12</code>）登录时，我们执行一个 <code>SETBIT</code> 命令。</p><ul><li><strong>Key</strong>: 可以是 <code>dau:2025-08-12</code> (Daily Active Users for 2025-08-12)。</li><li><strong>Offset</strong>: 就是用户的 <code>userId</code>。</li><li><strong>Value</strong>: <code>1</code>，表示该用户今天活跃。</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 用户 ID 为 10086 的用户在 2025-08-12 登录了</span></span>
<span class="line"><span>SETBIT dau:2025-08-12 10086 1</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 用户 ID 为 666 的用户也登录了</span></span>
<span class="line"><span>SETBIT dau:2025-08-12 666 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即使同一个用户当天多次登录，<code>SETBIT</code> 命令也只是反复将同一个位置设为 1，完美实现了<strong>自动去重</strong>。</p></li><li><p><strong>统计 DAU</strong>：想知道今天总共有多少独立用户登录？一个 <code>BITCOUNT</code> 命令就够了。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>BITCOUNT dau:2025-08-12</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个命令会返回 <code>dau:2025-08-12</code> 这个 key 中所有值为 1 的位的数量，即当天的独立用户总数。</p></li></ul><h3 id="_2-统计月活跃用户-mau" tabindex="-1"><a class="header-anchor" href="#_2-统计月活跃用户-mau"><span>2. 统计月活跃用户 (MAU)</span></a></h3><p>要计算月活，我们需要用到 <code>BITOP</code> 命令，它可以对多个 BitMap 进行位运算。</p><ol><li><p><strong>合并日活数据</strong>：将一个月内所有日期的 DAU BitMap 进行 <strong>OR (或)</strong> 运算。只要一个用户在一个月内任何一天登录过，结果 BitMap 中对应的位就会是 1。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 计算2025年8月的月活</span></span>
<span class="line"><span>BITOP OR mau:2025-08 dau:2025-08-01 dau:2025-08-02 ... dau:2025-08-31</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>统计 MAU</strong>：对合并后的 <code>mau:2025-08</code> 这个 key 执行 <code>BITCOUNT</code>。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>BITCOUNT mau:2025-08</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="_3-用户连续登录-留存分析" tabindex="-1"><a class="header-anchor" href="#_3-用户连续登录-留存分析"><span>3. 用户连续登录/留存分析</span></a></h3><p>想知道某个用户是否连续 3 天登录？用 <code>GETBIT</code> 就行。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span># 检查用户 10086 是否在 8月10日、11日、12日都登录了</span></span>
<span class="line"><span>GETBIT dau:2025-08-10 10086</span></span>
<span class="line"><span>GETBIT dau:2025-08-11 10086</span></span>
<span class="line"><span>GETBIT dau:2025-08-12 10086</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果三次查询结果都为 1，则说明该用户实现了连续 3 天登录。</p><h2 id="优缺点总结" tabindex="-1"><a class="header-anchor" href="#优缺点总结"><span>优缺点总结</span></a></h2><table><thead><tr><th>特性</th><th>Redis BitMap</th></tr></thead><tbody><tr><td><strong>优点</strong></td><td>✅ <strong>极高的空间效率</strong>：存储 1 亿用户的日活状态，仅需约 12.5 MB 内存 (100,000,000 / 8 / 1024 / 1024)。</td></tr><tr><td></td><td>✅ <strong>性能优异</strong>：位操作指令执行速度非常快，<code>BITCOUNT</code> 算法也很高效。</td></tr><tr><td></td><td>✅ <strong>操作简单</strong>：命令清晰，逻辑简单，非常适合做大规模去重统计。</td></tr><tr><td><strong>缺点</strong></td><td>❌ <strong>Offset 必须是数字</strong>：用户的标识必须是整数。如果用户 ID 是字符串（如 UUID），需要先映射成整数 ID。</td></tr><tr><td></td><td>❌ <strong>稀疏数据问题</strong>：BitMap 的大小由 <code>offset</code> 的最大值决定。如果用户 ID 分布非常稀疏（例如只有 ID 为 1 和 ID 为 1 亿的用户），Redis 仍需分配约 12.5 MB 的空间，中间部分会被浪费。</td></tr></tbody></table><h2 id="结论" tabindex="-1"><a class="header-anchor" href="#结论"><span>结论</span></a></h2><p>总而言之，Redis BitMap 提供了一种极其节省空间且性能卓越的方式来处理海量用户的布尔状态数据。它是实现大规模日活/月活统计、用户签到、在线状态跟踪等场景的利器。</p>`,21)]))}const p=s(n,[["render",d]]),c=JSON.parse('{"path":"/8gu/BitMap%E5%92%8C%E6%B5%81%E9%87%8F%E7%BB%9F%E8%AE%A1.html","title":"Redis BitMap 与流量统计","lang":"zh-CN","frontmatter":{"description":"Redis BitMap 与流量统计 Redis 的 BitMap (位图) 并不是一个独立的数据类型，而是对 String 类型的一种扩展和一系列位操作命令的集合。它允许您将一个字符串看作是一个由二进制位（0 或 1）组成的数组，并对这些位进行独立的设置和查询。 由于其极高的空间效率，BitMap 在处理海量数据的布尔状态（例如，用户是否在线、是否签...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis BitMap 与流量统计\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-14T03:48:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CodeLong\\",\\"url\\":\\"codelong.top\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/8gu/BitMap%E5%92%8C%E6%B5%81%E9%87%8F%E7%BB%9F%E8%AE%A1.html"}],["meta",{"property":"og:site_name","content":"CodeLong"}],["meta",{"property":"og:title","content":"Redis BitMap 与流量统计"}],["meta",{"property":"og:description","content":"Redis BitMap 与流量统计 Redis 的 BitMap (位图) 并不是一个独立的数据类型，而是对 String 类型的一种扩展和一系列位操作命令的集合。它允许您将一个字符串看作是一个由二进制位（0 或 1）组成的数组，并对这些位进行独立的设置和查询。 由于其极高的空间效率，BitMap 在处理海量数据的布尔状态（例如，用户是否在线、是否签..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-14T03:48:22.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-14T03:48:22.000Z"}]]},"git":{"createdTime":1755143302000,"updatedTime":1755143302000,"contributors":[{"name":"1973034392","username":"1973034392","email":"1973034392@qq.com","commits":1,"url":"https://github.com/1973034392"}]},"readingTime":{"minutes":3.61,"words":1083},"filePathRelative":"8gu/BitMap和流量统计.md","autoDesc":true}');export{p as comp,c as data};
