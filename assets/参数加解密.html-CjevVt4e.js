import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as h}from"./app-4GTAhYQ5.js";const t={};function l(e,s){return h(),a("div",null,s[0]||(s[0]=[n('<h1 id="系统接口参数加解密" tabindex="-1"><a class="header-anchor" href="#系统接口参数加解密"><span>系统接口参数加解密</span></a></h1><h2 id="一、-背景与加密策略" tabindex="-1"><a class="header-anchor" href="#一、-背景与加密策略"><span>一、 背景与加密策略</span></a></h2><p>在当前主流的微服务架构中，前后端分离的开发模式十分普遍。这种模式虽然提高了开发效率和灵活性，但也使得后端的API接口直接暴露于外部网络，带来了参数被截获或篡改的安全风险。为了保障数据传输的安全性与完整性，对接口参数进行加密处理是至关重要的。</p><p>本项目在综合考量了不同加密算法的优劣后，最终选择了 <strong>RSA非对称加密</strong> 方案。</p><h3 id="加密算法简介" tabindex="-1"><a class="header-anchor" href="#加密算法简介"><span>加密算法简介</span></a></h3><ul><li><strong>对称加密 (如AES)</strong>: 使用同一密钥进行加解密。其优势在于处理速度快，适合对大量数据进行加密。然而，其主要挑战在于密钥的安全分发与管理，一旦密钥泄露，信息安全将荡然无存。</li><li><strong>非对称加密 (如RSA)</strong>: 使用一对密钥——公钥和私钥。公钥对外公开，用于加密数据或验证签名；私钥由持有者秘密保管，用于解密数据或生成签名。这种机制完美地解决了对称加密中的密钥分发难题，并能同时实现数据加密和数字签名，提供了更高级别的安全保障。尽管其加解密速度相较于对称加密更慢，但对于接口参数这类数据量不大的场景，其安全性优势更为突出。</li></ul><p>本项目利用RSA的特性，由前端负责对请求数据进行加密和签名，而后端网关则负责解密和验签，确保通信安全。</p><h2 id="二、-基础配置与管理" tabindex="-1"><a class="header-anchor" href="#二、-基础配置与管理"><span>二、 基础配置与管理</span></a></h2><p>为了支持多渠道、多平台的接入（例如小程序、Web端、移动客户端等），系统设计了一套灵活的渠道化配置机制。</p><h3 id="_1-渠道数据配置" tabindex="-1"><a class="header-anchor" href="#_1-渠道数据配置"><span>1. 渠道数据配置</span></a></h3><p>系统通过唯一的<strong>渠道编码 (<code>code</code>)</strong> 来区分不同的调用方。每个渠道都拥有一套独立的加密和签名密钥。这些配置信息通过API接口（详见ApiFox中的<code>base-data</code>模块）进行管理，并持久化存储在数据库的<code>channel_data</code>表中。</p><p><strong>数据表结构 (<code>channel_data</code>)</strong></p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">CREATE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> `</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">channel_data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">` (</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `id`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bigint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;id&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `name`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DEFAULT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;名称&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `code`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;编码&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `introduce`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> varchar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DEFAULT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;介绍描述&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `sign_public_key`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> text</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rsa签名公钥&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `sign_secret_key`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> text</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rsa签名秘钥&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `aes_key`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;aes秘钥&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `data_public_key`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rsa参数公钥&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `data_secret_key`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rsa参数私钥&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `token_secret`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> text</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NOT NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;token秘钥&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `status`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DEFAULT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;状态 1:启用 0:禁用&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `edit_time`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> datetime</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> DEFAULT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;编辑时间&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  `create_time`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> datetime</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> DEFAULT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> COMMENT </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;创建时间&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  PRIMARY KEY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`id`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  UNIQUE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> KEY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> `code_IDX`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">`code`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">USING</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> BTREE</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) ENGINE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">InnoDB </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DEFAULT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> CHARSET</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">utf8mb4 COMMENT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;渠道基础数据信息&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从表结构中可以看出，系统为签名验证和业务数据加解密分别准备了两套独立的RSA公私钥（<code>sign_*</code> 和 <code>data_*</code> 字段），以实现更强的安全隔离。</p><h3 id="_2-高效的缓存机制" tabindex="-1"><a class="header-anchor" href="#_2-高效的缓存机制"><span>2. 高效的缓存机制</span></a></h3><p>为避免每次请求都查询数据库，提高网关处理效率，系统在后台新增或更新渠道数据时，会同步将配置信息缓存到Redis中。 网关在处理请求时，会优先从Redis中根据<code>code</code>快速获取对应渠道的密钥等配置信息。</p><p>以下是后台服务将数据写入Redis缓存的逻辑示例：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* 将渠道配置数据存入Redis</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span>\n<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> addRedisChannelData</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ChannelData</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> channelData){</span></span>\n<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    GetChannelDataVo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> getChannelDataVo </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> GetChannelDataVo</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    BeanUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">copyProperties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(channelData, getChannelDataVo);</span></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 使用包装好的Redis Key模板，将数据存入</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    redisCache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">RedisKeyWrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createRedisKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">RedisKeyEnum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">CHANNEL_DATA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">getChannelDataVo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()), getChannelDataVo);</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、-接口调用与加解密流程" tabindex="-1"><a class="header-anchor" href="#三、-接口调用与加解密流程"><span>三、 接口调用与加解密流程</span></a></h2><h3 id="_1-通用请求格式" tabindex="-1"><a class="header-anchor" href="#_1-通用请求格式"><span>1. 通用请求格式</span></a></h3><p>所有需要安全验证的接口调用，均需遵循以下格式：</p><ul><li><strong>请求方式</strong>: <code>POST</code></li><li><strong>请求体</strong>: <code>JSON</code></li><li><strong>必需参数</strong>: <ul><li><code>code</code>: 渠道编码，用于标识调用方身份。</li><li><code>businessBody</code>: 经过处理的业务参数体。</li><li><code>sign</code>: 基于参数生成的签名。</li></ul></li></ul><h3 id="_2-具体实现方案" tabindex="-1"><a class="header-anchor" href="#_2-具体实现方案"><span>2. 具体实现方案</span></a></h3><p>系统支持多种调用方式，以适应不同场景的需求。</p><h4 id="方案一-跳过安全验证-调试模式" tabindex="-1"><a class="header-anchor" href="#方案一-跳过安全验证-调试模式"><span>方案一：跳过安全验证（调试模式）</span></a></h4><p>在特定情况下（如开发或调试阶段），可以临时绕过签名和加密流程。只需在请求头中加入 <code>no_verify = true</code> 即可。 此时，<code>businessBody</code>可以直接传递未经任何处理的原始JSON业务参数。</p><p><strong>示例请求:</strong></p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;111&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方案二-v1-签名验证-默认模式" tabindex="-1"><a class="header-anchor" href="#方案二-v1-签名验证-默认模式"><span>方案二：V1 - 签名验证（默认模式）</span></a></h4><p>这是标准的默认安全模式，主要用于防止参数被篡改。</p><ul><li><strong>前端处理</strong>: 将所有业务参数和基础参数（<code>code</code>和<code>businessBody</code>的字符串值）拼接起来，使用渠道对应的 <strong>RSA签名私钥</strong> 生成<code>sign</code>。</li><li><strong>网关处理</strong>: 网关接收到请求后，根据<code>code</code>参数从缓存中查询出对应的 <strong>RSA签名公钥</strong>，对接收到的参数和<code>sign</code>进行验签。</li></ul><p><strong>示例请求:</strong></p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;code&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1234&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;businessBody&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">id</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">1111</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">sleepTime</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:10}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;sign&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;JdTXuqMTCMGmM5zs7LoHwcEwFS5HQo/9bttao0GAAdoI/MpUpg7Eb5RN3Tmm4QT6FZVdJGVLqK48QKBAhJUlrBA8D14SJj7teMtPGboSxJ475+rGvgdycQbGKf7o40YBXwJGJeOG6xNJz913+Z8Zf/R9Sbd9gjF1QBXvSZy5i/sTNxhDOGydhLetInUcC/iMsqzoCk4e9MKltUSf4rQV4LQ0E171n93DtKLI4RZ9gPRzTBT7tPkpuPZ2GoJ5pJTQiNcjiDDYtHBPBeemrXtqumDblIJJuOBrcQk+1sYicQFy9ZQY1PAMoHjCTCPKNxUAULsodpXEj1TYJUl+q2jTwg==&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="方案三-v2-参数加密并签名-高安全模式" tabindex="-1"><a class="header-anchor" href="#方案三-v2-参数加密并签名-高安全模式"><span>方案三：V2 - 参数加密并签名（高安全模式）</span></a></h4><p>对于安全级别要求更高的接口，可以启用此模式，同时实现数据保密性和抗篡改性。</p><ul><li><strong>启用方式</strong>: 在请求头中添加 <code>encrypt = v2</code>。</li><li><strong>核心机制</strong>: 此模式下，签名和加解密使用两套不同的RSA密钥对。</li><li><strong>前端处理</strong>: <ol><li>使用 <strong>RSA数据公钥</strong> 对原始业务参数（<code>businessBody</code>的内容）进行加密。</li><li>将 <strong>未加密</strong> 的原始业务参数和基础参数进行拼接，然后使用 <strong>RSA签名私钥</strong> 生成<code>sign</code>。</li><li>最终发送的请求中，<code>businessBody</code>是加密后的密文，而<code>sign</code>是对原始数据生成的签名。</li></ol></li><li><strong>网关处理</strong>: <ol><li><strong>验签</strong>: 网关首先使用 <strong>RSA数据私钥</strong> 将接收到的<code>businessBody</code>解密，得到原始业务参数。</li><li>然后，用解密后的原始业务参数和请求中的其他参数，配合 <strong>RSA签名公钥</strong> 进行验签。</li><li><strong>响应加密</strong>: 在接口将处理结果返回给前端时，网关会使用 <strong>RSA数据公钥</strong> 对返回数据进行加密，前端需要用对应的 <strong>RSA数据私钥</strong> 进行解密后才能获取真实数据。</li></ol></li></ul><p><strong>示例请求 (高安全模式):</strong></p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;code&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1234&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;businessBody&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;SWwqEci1ci3Dog/iIKXirjirt+Va01RO2zlcBjPkpFBx1y2LPbKdgfLlGc+QnCgTXjbp/KkqFdqCcFBTJstdhy7+RNzxESBXKuuMlUwyXIPpNyIgLmSyu7Saoy2VbHw1Z2pXYTNdf7u3CL4MRuVjLszN6OY4qQozQAlp87sek2QLvh+wyi0csbXqJgvDDlh2LfpcFe7ycSxMDcTkYVOAqbHtXXzLI/I3W1KHcErHCZVuc+f6tk7Y4iBnR6MeFeqvOeziSBZVUBAQHlKr9Bm6fY1xHYx5NLavS8q/S4USwenntlG37J6Tb09D0+KahtAcguxLqTikbVxrcWpYv/tWRw==&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>\n<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;sign&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;EfxdpQB8GGWbQFNA1hBTnHhf4nWJerIsK+6NcuIptuzzooWgL+sFmGu9J9kG3hptiWRqkhW6DPDDRmfmUblvMuX9tC0jHoTnSeZBDkFi7+IJ+fdPg5iyi7+XHBCcR7pVilJgvjHXsDMjN3oaF1k4I56L5fYCfvcgSi6VQoGt+dB0kd4zWHWEGOu1c/TrowYCFaHElVq1fXPEd7dglbF2g4qHE8yrfELt6NXfO0K+P9elqB8NGnRcBQeM0d37+nQrCxOY5Mml2AKANs0UkLxZfrbqc95MjCWvDdRiQGGJnCIL1ZtMTsopgB2nGo8yMoqFVn4eE6G6wSFu1z1e5q4nQ==&quot;</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',38)]))}const d=i(t,[["render",l]]),r=JSON.parse('{"path":"/projects/easypass/%E5%8F%82%E6%95%B0%E5%8A%A0%E8%A7%A3%E5%AF%86.html","title":"系统接口参数加解密","lang":"zh-CN","frontmatter":{"description":"系统接口参数加解密 一、 背景与加密策略 在当前主流的微服务架构中，前后端分离的开发模式十分普遍。这种模式虽然提高了开发效率和灵活性，但也使得后端的API接口直接暴露于外部网络，带来了参数被截获或篡改的安全风险。为了保障数据传输的安全性与完整性，对接口参数进行加密处理是至关重要的。 本项目在综合考量了不同加密算法的优劣后，最终选择了 RSA非对称加密 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"系统接口参数加解密\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-14T02:11:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CodeLong\\",\\"url\\":\\"codelong.top\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/projects/easypass/%E5%8F%82%E6%95%B0%E5%8A%A0%E8%A7%A3%E5%AF%86.html"}],["meta",{"property":"og:site_name","content":"CodeLong"}],["meta",{"property":"og:title","content":"系统接口参数加解密"}],["meta",{"property":"og:description","content":"系统接口参数加解密 一、 背景与加密策略 在当前主流的微服务架构中，前后端分离的开发模式十分普遍。这种模式虽然提高了开发效率和灵活性，但也使得后端的API接口直接暴露于外部网络，带来了参数被截获或篡改的安全风险。为了保障数据传输的安全性与完整性，对接口参数进行加密处理是至关重要的。 本项目在综合考量了不同加密算法的优劣后，最终选择了 RSA非对称加密 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-14T02:11:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-14T02:11:18.000Z"}]]},"git":{"createdTime":1755137478000,"updatedTime":1755137478000,"contributors":[{"name":"1973034392","username":"1973034392","email":"1973034392@qq.com","commits":1,"url":"https://github.com/1973034392"}]},"readingTime":{"minutes":5.34,"words":1602},"filePathRelative":"projects/easypass/参数加解密.md","autoDesc":true}');export{d as comp,r as data};
